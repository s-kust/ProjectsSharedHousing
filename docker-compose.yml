version: '3'
 
services:
  app:
    restart: always
    build:
      context: .
    expose:
      - 8000
    volumes:
      - ./app:/app
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&             
             python3 db_init.py &&
             gunicorn --bind 0.0.0.0:8000 root_app.wsgi:application"
 
    env_file:
      - ./.env
    depends_on:
      - db 
  db:
    restart: always
    image: postgres:10-alpine
    env_file:
      - ./.env
    volumes:
      # - pgdata:/var/lib/postgresql/data
        - ./data/db:/var/lib/postgresql/data
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
  celery:
    restart: always
    # ports:    
      # - "6900-7000:6900-7000"
    build:
      context: .
      dockerfile: Dockerfile_celery
    command: celery -A root_app worker -l info --logfile=celery_log.log
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - app
  celery-beat:
    restart: always
    # ports:    
      # - "6900-7000:6900-7000"
    build:
      context: .
      dockerfile: Dockerfile_celery
    command: celery -A root_app beat -l info --logfile=celery_log.log
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - app
  nginx:
    build: ./build_nginx
    volumes:
      - ./app/staticfiles:/app/staticfiles
      - ./app/media:/app/media
    ports:
      - "80:80"
    depends_on:
      - app